/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spm_tdk;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ButtonGroup;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author melan
 */
public class MainUI extends javax.swing.JFrame {
    
    private Dimension dimension = null;
    public static ButtonGroup g = new ButtonGroup();

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        
        dimension = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dimension.width/2-this.getSize().width/2, dimension.height/2-this.getSize().height/2);
       
        g.add(fileradiobutton);
        g.add(textradiobutton);
        
        fileradiobutton.setSelected(true);
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        JPannelMain = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        setFilePathButton = new javax.swing.JButton();
        filePathTextField = new javax.swing.JTextField();
        importFileButton = new javax.swing.JButton();
        fileradiobutton = new javax.swing.JRadioButton();
        textradiobutton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        codetextarea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        JPannelMain.setBackground(new java.awt.Color(0, 102, 153));
        JPannelMain.setForeground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("DejaVu Sans Light", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(241, 241, 241));
        jLabel1.setText("Check Code Complexity ");

        setFilePathButton.setBackground(new java.awt.Color(0, 153, 255));
        setFilePathButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        setFilePathButton.setForeground(new java.awt.Color(1, 1, 1));
        setFilePathButton.setText("Set File Path");
        setFilePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFilePathButtonActionPerformed(evt);
            }
        });

        filePathTextField.setEditable(false);
        filePathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathTextFieldActionPerformed(evt);
            }
        });

        importFileButton.setBackground(new java.awt.Color(0, 153, 255));
        importFileButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        importFileButton.setForeground(new java.awt.Color(1, 1, 1));
        importFileButton.setText("Import File");
        importFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileButtonActionPerformed(evt);
            }
        });

        fileradiobutton.setText("Import as a file");
        fileradiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileradiobuttonActionPerformed(evt);
            }
        });

        textradiobutton.setText("Imort as text");
        textradiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textradiobuttonActionPerformed(evt);
            }
        });

        codetextarea.setColumns(20);
        codetextarea.setRows(5);
        jScrollPane1.setViewportView(codetextarea);

        javax.swing.GroupLayout JPannelMainLayout = new javax.swing.GroupLayout(JPannelMain);
        JPannelMain.setLayout(JPannelMainLayout);
        JPannelMainLayout.setHorizontalGroup(
            JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPannelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileradiobutton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textradiobutton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPannelMainLayout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(setFilePathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
            .addGroup(JPannelMainLayout.createSequentialGroup()
                .addGap(462, 462, 462)
                .addGroup(JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JPannelMainLayout.setVerticalGroup(
            JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPannelMainLayout.createSequentialGroup()
                .addGroup(JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JPannelMainLayout.createSequentialGroup()
                        .addGroup(JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fileradiobutton)
                            .addComponent(textradiobutton))
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPannelMainLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)))
                .addGroup(JPannelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setFilePathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(167, 167, 167)
                .addComponent(importFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPannelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPannelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filePathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathTextFieldActionPerformed

    private void setFilePathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFilePathButtonActionPerformed
        
        
        final JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);

        try{
            final File file = fc.getSelectedFile();
            String path = file.getAbsolutePath();
            path = path.replace('\\', '/');

            filePathTextField.setText(path);

        }
        catch(Exception e){
            JOptionPane newOptionPane = new JOptionPane("Exited without selecting file", JOptionPane.ERROR_MESSAGE);
            final JDialog newDialog = newOptionPane.createDialog("Warning");
            newDialog.setAlwaysOnTop(true);
            newDialog.setVisible(true);

        }
    }//GEN-LAST:event_setFilePathButtonActionPerformed

    private void importFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileButtonActionPerformed
        
        if(fileradiobutton.isSelected()){
            final String filePath = filePathTextField.getText();
        
            if(filePath.isEmpty()){
                JOptionPane newOptionPane = new JOptionPane("Please select the file path to import", JOptionPane.ERROR_MESSAGE);
                final JDialog newDialog = newOptionPane.createDialog("Warning");
                newDialog.setAlwaysOnTop(true);
                newDialog.setVisible(true); 
            }
            else{
                final Analysis analysis = new Analysis(filePath, null);
                this.enable(false);
                analysis.setVisible(true);
            }
        }
        else if(textradiobutton.isSelected()){
            
            if(codetextarea.getText().isEmpty()){
                
                JOptionPane newOptionPane = new JOptionPane("Please add the code to be imported", JOptionPane.ERROR_MESSAGE);
                final JDialog newDialog = newOptionPane.createDialog("Warning");
                newDialog.setAlwaysOnTop(true);
                newDialog.setVisible(true);
            }
            else{
                final Analysis analysis = new Analysis(null, codetextarea.getText());
                this.enable(false);
                analysis.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_importFileButtonActionPerformed

    private void textradiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textradiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textradiobuttonActionPerformed

    private void fileradiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileradiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileradiobuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPannelMain;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea codetextarea;
    private javax.swing.JTextField filePathTextField;
    private javax.swing.JRadioButton fileradiobutton;
    private javax.swing.JButton importFileButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton setFilePathButton;
    private javax.swing.JRadioButton textradiobutton;
    // End of variables declaration//GEN-END:variables
}
